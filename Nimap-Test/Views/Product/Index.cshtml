@* @model IEnumerable<Nimap_Test.Models.Product>

@{
    ViewBag.Title = "Product List";
}
<h2>Product List</h2>

@if(ViewBag.Message != null)
{
    <div class="alert alert-success">
        @ViewBag.Message
    </div>
}
<p>
    <a href="@Url.Action("Create", "Product")" class="btn btn-primary">Create New</a>
</p>
<table class="table"> 
    <thead>
    <tr>
        <td>ProductID</td>
        <td>ProductName</td>
        <td>CategoryId</td>
        <td>CategoryName</td>
        <td>Action</td>
    </tr>
    </thead>
    <tbody>
        @foreach (var product in Model)
        {
            <tr>
                <td>@product.ProductId</td>
                <td>@product.ProductName</td>
                <td>@product.CategoryId</td>
                 <td>@product.Category.CategoryName</td>
                <td>
                    <a href="@Url.Action("Edit","Product", new {id=product.ProductId})" class="btn btn-info">Edit</a>
                    <a href="@Url.Action("Delete","Product", new {id=product.ProductId})" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table> *@

                @model PaginatedProductViewModel

@{
    ViewBag.Title = "Product List";
}
<h2>Product List</h2>

@if (ViewBag.Message != null)
{
    <div class="alert alert-success">
        @ViewBag.Message
    </div>
}
@if (ViewBag.Error != null)
{
    <div class="alert alert-denger">
        @ViewBag.Error
    </div>
}

<p>
    <a href="@Url.Action("Create", "Product")" class="btn btn-primary">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>ProductID</th>
            <th>ProductName</th>
            <th>CategoryId</th>
            <th>CategoryName</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in Model.Products)
        {
            <tr>
                <td>@product.ProductId</td>
                <td>@product.ProductName</td>
                <td>@product.CategoryId</td>
                <td>@product.Category.CategoryName</td>
                <td>
                    <a href="@Url.Action("Edit","Product", new {id=product.ProductId})" class="btn btn-info">Edit</a>
                    <a href="@Url.Action("Delete","Product", new {id=product.ProductId})" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Controls -->
@* <div class="pagination">
    @if (Model.CurrentPage > 1)
    {
        <a href="@Url.Action("Index", "Product", new { pageNumber = Model.CurrentPage - 1, pageSize = Model.PageSize })">&laquo; Previous</a>
    }

    <span>Page @Model.CurrentPage of @Model.TotalPages</span>

    @if (Model.CurrentPage < Model.TotalPages)
    {
        <a href="@Url.Action("Index", "Product", new { pageNumber = Model.CurrentPage + 1, pageSize = Model.PageSize })">Next &raquo;</a>
    }
</div>
 *@
<nav aria-label="Page navigation">
    <ul class="pagination">

        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", "Product", new { pageNumber = Model.CurrentPage - 1, pageSize = Model.PageSize })">&laquo; Previous</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">&laquo; Previous</span>
            </li>
        }


        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", "Product", new { pageNumber = i, pageSize = Model.PageSize })">
                    @i
                    @if (i == Model.CurrentPage)
                    {
                        <span class="sr-only"></span>
                    }
                </a>
            </li>
        }


        @if (Model.CurrentPage < Model.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", "Product", new { pageNumber = Model.CurrentPage + 1, pageSize = Model.PageSize })">Next &raquo;</a>
            </li>
        }
        else
        {
            <li class="page-item disabled">
                <span class="page-link">Next &raquo;</span>
            </li>
        }
    </ul>
</nav>
